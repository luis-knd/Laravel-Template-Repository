services:
  app:
    container_name: template_api
    build:
      context: ./docker
      dockerfile: nginx.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - "80:80"
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - php
      - redis
      - mysql
    networks:
      - template_network

  mysql:
    container_name: template_db
    image: mysql:8.0
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: template
      MYSQL_USER: lcandelario
      MYSQL_PASSWORD: lcandelario
      MYSQL_ROOT_PASSWORD: root_password
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./docker/mysql/db_data:/var/lib/mysql
    networks:
      - template_network

  artisan:
    container_name: template_artisan
    build:
      context: ./docker
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - mysql
    entrypoint: [ 'php', '/var/www/html/artisan' ]
    networks:
      - template_network

  php:
    container_name: template_php
    build:
      context: ./docker
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - "9000:9000"
    volumes:
      - ./src:/var/www/html:delegated
    networks:
      - template_network

  redis:
    container_name: template_redis
    image: redis:alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - template_network

  composer:
    container_name: template_composer
    build:
      context: ./docker
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - ./src:/var/www/html
    depends_on:
      - php
    entrypoint: [ 'composer', '--ignore-platform-reqs' ]
    networks:
      - template_network

networks:
  template_network: